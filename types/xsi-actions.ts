/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/user/{user}/directories/agents": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user: string;
      };
      cookie?: never;
    };
    /** Get agents directory */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          user: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description A list of agents within user directory */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["AgentDirectoryResponse"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/callcenter/{callcenter}/profile/dnis": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        callcenter: string;
      };
      cookie?: never;
    };
    /** Get a list of DNIS entries */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          callcenter: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description A list of DNIS records */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["AcDnisResponse"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AcDnisResponse: {
      ACDDNIS: {
        "@xmlns": components["schemas"]["StringProperty"];
        dnisDisplaySetting: {
          displayDNISName: components["schemas"]["StringProperty"];
          displayDNISNumber: components["schemas"]["StringProperty"];
        };
        dnisPrioritySetting: {
          promoteCallsFromPriority1to0: components["schemas"]["StringProperty"];
          promoteCallsFromPriority1to0Seconds: components["schemas"]["StringProperty"];
          promoteCallsFromPriority2to1: components["schemas"]["StringProperty"];
          promoteCallsFromPriority2to1Seconds: components["schemas"]["StringProperty"];
          promoteCallsFromPriority3to2: components["schemas"]["StringProperty"];
          promoteCallsFromPriority3to2Seconds: components["schemas"]["StringProperty"];
        };
        dnisInfoList: {
          dnisInfo: {
            name: components["schemas"]["StringProperty"];
            phoneNumber: components["schemas"]["StringProperty"];
            extension: components["schemas"]["StringProperty"];
            priority: components["schemas"]["StringProperty"];
          }[];
        };
      };
    };
    AgentDirectoryResponse: {
      CallCenterAgents: {
        "@xmlns": components["schemas"]["StringProperty"];
        callCenter: {
          serviceUserID: components["schemas"]["StringProperty"];
          agentList: {
            userDetails: components["schemas"]["UserDetails"][];
          };
        }[];
      };
    };
    UserDetails: {
      userId: components["schemas"]["StringProperty"];
      firstName: components["schemas"]["StringProperty"];
      lastName: components["schemas"]["StringProperty"];
      hiranganaFirstName: components["schemas"]["StringProperty"];
      hiranganaLastName: components["schemas"]["StringProperty"];
      number?: components["schemas"]["StringProperty"];
      extension: components["schemas"]["StringProperty"];
      additionalDetails: {
        impId?: components["schemas"]["StringProperty"];
      };
    };
    StringProperty: {
      $: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;
export type operations = Record<string, never>;
